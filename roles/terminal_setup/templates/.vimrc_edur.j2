" ---------- General ----------
set nocompatible
set encoding=utf-8

set number
set numberwidth=5
if exists('&signcolumn')
  set signcolumn=yes
endif

set incsearch
set hlsearch
set ignorecase
set smartcase

set undofile
set undodir=~/.vim/undo
if !isdirectory($HOME . "/.vim/undo")
  call mkdir($HOME . "/.vim/undo", "p")
endif

set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set autoindent
set smartindent

if !hlexists("ExtraWhitespace")
  highlight ExtraWhitespace ctermbg=DarkRed guibg=DarkRed
endif
match ExtraWhitespace /\s\+$/

set backspace=indent,eol,start

filetype plugin indent on
syntax on

" ---------- Shift-Tab (raw-sequence + generic) ----------
set ttimeout
set ttimeoutlen=10
nnoremap  <Esc>[Z  <<
xnoremap  <Esc>[Z  <gv
inoremap  <Esc>[Z  <C-d>
nnoremap <S-Tab> <<
xnoremap <S-Tab> <gv
inoremap <S-Tab> <C-d>

" ---------- Filetype-specific ----------
augroup ft_yaml
  autocmd!
  autocmd FileType yaml setlocal expandtab shiftwidth=2 softtabstop=2 tabstop=2
augroup END

augroup ft_python
  autocmd!
  autocmd FileType python setlocal expandtab shiftwidth=4 softtabstop=4 tabstop=4
augroup END

" ---------- QoL ----------
augroup restore_cursor
  autocmd!
  autocmd BufReadPost *
        \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \   execute "normal! g`\"" |
        \ endif
augroup END

nnoremap j gj
nnoremap k gk
